{"mode":"Text","textContent":"// ----------------------------------------------------------------------------\n//                                                                            \n//    Project: VEXCode1\n//    Author: Angel Ramirez-Rios\n//    Created: October 13th, 2021\n//    Configuration:        \n//                                                                            \n// ----------------------------------------------------------------------------\n\n// Include the V5 Library\n#include \"vex.h\"\n\n// Allows for easier use of the VEX Library\nusing namespace vex;\n\n// Begin project code\n\nbool spinRing = false;\n\nvoid moveLiftUp (int amount, bool stopProgram) {\n    LiftM.spinFor(forward, amount, degrees, stopProgram);\n}\n\nvoid moveLiftDown (int amount, bool stopProgram) {\n    LiftM.spinFor(reverse, amount, degrees, stopProgram);\n}\n\nvoid spinAutonRing (bool stopProgram) {\n    LeftD.spinFor(forward, 1080, degrees, stopProgram);\n}\n\nvoid moveBackward(int travelDistance, bool stopProgram) {\n  LeftD.spinFor(reverse, travelDistance, degrees, false);\n  RightD.spinFor(reverse, travelDistance, degrees, stopProgram);\n}\n\nvoid moveForward(int travelDistance, bool stopProgram) {\n  LeftD.spinFor(forward, travelDistance, degrees, false);\n  RightD.spinFor(forward, travelDistance, degrees, stopProgram);\n}\n\nvoid turnLeft(bool stopProgram) {\n  LeftD.spinFor(reverse, 240, degrees, false);\n  RightD.spinFor(forward, 240, degrees, stopProgram);\n}\n\nvoid turnRight(bool stopProgram) {\n  LeftD.spinFor(forward, 240, degrees, false); \n  RightD.spinFor(reverse, 240, degrees, stopProgram);\n}\n\nvoid preAutonomous(void) {\n  // actions to do when the program starts\n  Brain.Screen.clearScreen();\n  Brain.Screen.print(\"pre auton code\");\n  wait(1, seconds);\n}\n\nvoid autonomous(void) {\n  Brain.Screen.clearScreen();\n  Brain.Screen.print(\"autonomous code\");\n  // place automonous code here\n  moveLiftDown(800, true);\n  moveForward(440, true);\n  moveLiftUp(450, true);\n  //spinAutonRing(false);\n  turnLeft(true);\n  moveForward(840, true);\n  moveLiftDown(450, true);\n  moveBackward(420, true);\n  turnRight(true);\n  moveForward(1260, true);\n\n}\n\nvoid userControl(void) {\n  Brain.Screen.clearScreen();\n  // place driver control in this while loop\n  while (true) {\n    wait(20, msec);\n    LeftD.spin(forward, Controller1.Axis3.position()*120, voltageUnits::mV);\n    RightD.spin(forward, Controller1.Axis2.position()*120, voltageUnits::mV);\n    if (Controller1.ButtonX.pressing()) {\n        spinRing = true;\n    } else if (Controller1.ButtonB.pressing()) {\n        spinRing = false;\n    }\n\n    if (Controller1.ButtonUp.pressing() || spinRing) {\n        Ring.spin(forward, 12000, voltageUnits::mV);\n    } else if (Controller1.ButtonDown.pressing()) {\n        Ring.spin(reverse, 12000, voltageUnits::mV);\n    } else {\n        Ring.setStopping(brake);\n        Ring.stop();\n    }\n\n    if (Controller1.ButtonY.pressing()) {\n        Fourbar.spin(reverse, 6000, voltageUnits::mV);\n        LiftM.spin(reverse, 12000, voltageUnits::mV);\n    }\n\n    if (Controller1.ButtonL1.pressing()) {\n        Fourbar.spin(reverse, 12000, voltageUnits::mV);\n    } else if (Controller1.ButtonL2.pressing()) {\n        Fourbar.spin(forward, 12000, voltageUnits::mV);\n    } else if (!Controller1.ButtonY.pressing()) {\n        Fourbar.setStopping(brake);\n        Fourbar.stop();\n    }\n\n    if (Controller1.ButtonR1.pressing()) {\n        LiftM.spin(forward, 12000, voltageUnits::mV);\n    } else if (Controller1.ButtonR2.pressing()) {\n        LiftM.spin(reverse, 12000, voltageUnits::mV);\n    } else if (!Controller1.ButtonY.pressing()) {\n        LiftM.setStopping(brake);\n        LiftM.stop();\n    }\n  }\n}\n\nint main() {\n  // create competition instance\n  competition Competition;\n\n  // Set up callbacks for autonomous and driver control periods.\n  Competition.autonomous(autonomous);\n  Competition.drivercontrol(userControl);\n\n  // Run the pre-autonomous function.\n  preAutonomous();\n\n  // Prevent main from exiting with an infinite loop.\n  while (true) {\n    wait(100, msec);\n  }\n}","textLanguage":"cpp","rconfig":[{"port":[],"name":"Controller1","customName":false,"deviceType":"Controller","deviceClass":"controller","setting":{"left":"","leftDir":"false","right":"","rightDir":"false","upDown":"","upDownDir":"false","xB":"","xBDir":"false","drive":"none","id":"primary"},"triportSourcePort":22},{"port":[18,20],"name":"LeftD","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"true","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[16,19],"name":"RightD","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio18_1","motor_a_reversed":"false","motor_b_reversed":"false","id":"partner"},"triportSourcePort":22},{"port":[17],"name":"Ring","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"true","fwd":"forward","rev":"reverse","gear":"ratio18_1"},"triportSourcePort":22},{"port":[1,2],"name":"Fourbar","customName":true,"deviceType":"MotorGroup","deviceClass":"motor_group","setting":{"fwd":"forward","rev":"reverse","gear":"ratio36_1","motor_a_reversed":"false","motor_b_reversed":"true"},"triportSourcePort":22},{"port":[11],"name":"LiftM","customName":true,"deviceType":"Motor","deviceClass":"motor","setting":{"reversed":"false","fwd":"forward","rev":"reverse","gear":"ratio36_1"},"triportSourcePort":22}],"slot":0,"platform":"V5","sdkVersion":"20210708.10.00.00","appVersion":"2.2.0","fileFormat":"1.0.1","icon":"","targetBrainGen":"First","target":"Physical"}